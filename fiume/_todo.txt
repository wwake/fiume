
* Figure out Plan's persistence
* Figure out People's persistence
Persistence

* Provide a "Delete All" button

* Make People a sequence so we don't access people.people

* Delete streams
* Edit stream
* Move streams

* Make amount an overrideable value on stream

* Sections
* Move streams between sections - see https://chriswu.com/posts/swiftui/multiplelistmove/


Pools

Inflation

* Allow dates to depend on death day

* Validate month is valid; end-date >= start-date

* Add multiple sections

* SS with 1/2 of spouse etc.


Calendar view (with RuleMark)
Add assets/liabilities
Add flows
Should we segregate streams by income/expense? (two columns)

Variables?

FI-24-21: 2024-06-13 - SwiftData Persistence


FI-24-20: 2024-06-12 - Persistence - Planxty in Views
* Figured out that Possibilities was relying on a semi-dead variable ("plan")
* Figured out that a view referenced wrong type of node
* Made sure scenarios and groups work, even when deep
* Rename Planxty => Plan
* Persistence - Tried making Possiblities a model object, needed Plan to be one too [to allow recursion]
* Made other classes Decodable
* Tried to active modelContainer without success

FI-24-19: 2024-06-11 - Persistence - PlanTree â‡’ enum
Persistence
* Convert PlanTree to Plan enum [parallel change] - and node
* Convert PlanTree to Plan enum [parallel change] - or node
* Convert PlanTree to Planxty struct
* Update all sets of tests
* Need to decide which of the three representations will work for persistence

FI-24-18: 2024-06-10 - User Interface for the Ages
* [offline] Added environment(people) to previews that needed it.
* [offline] Make AgeSelector initialize onAppear() [temporarily removed]
* [offline] Rename project() to netWorth()
* Make AgeSelector work [it could only pick first name on list because selection state was optional]
* Make Person.birthYear required
* Make default year higher

Persistence
* Convert PlanTree to Plan enum [parallel change] - stream


FI-24-17: 2024-06-06 - Age-Based Dates
* Make Stream work for age at end of range
* Require birthdate on Person
* Start UI for selection by Age

FI-24-16: 2024-06-05 - Graph by MonthYear
* Make Graph work with MonthYear
* Clean out use of MonthNumber (in Stream and Scenario, and tests)
* Refactor the range of the graph
* Made Possibilities know the range to explore
* Introduce abbreviated constants for MonthYear eg. 2024.oct
* Make Stream work for age on birthdates

FI-24-15: 2024-06-04 - MonthNumber => MonthYear
* Manage by month/year:
  * Make MonthYear be Strideable
  * Make Possibilities pass down MonthYear
  * Split out Month as a separate enum
  * Scenario.project() needs range over MonthYear
  * Make StreamView use Date picker

FI-24-14: 2024-06-03 - People
* [offline] Changed "Family" to "People"
* [offline] Added colors for dark mode
* [offline] Changed stream color to transparent when amount = 0
* Introduced update(using:) to DateSpecifier to simplify Stream
* Add start date to Possibilities
* Changed "DateDescription.unspecified" to "unchanged"
* Add Age to DateSpecifier - equatable, update
* Add DateSpecifier.description
* Make DateSpecifier know the Person (for age)

FI-24-13: 2024-05-30 - MonthYear Picker
* Define a MonthYear picker
* Make it allow null ("known"?)
* Define a Person creator
* Add people

FI-24-12: 2024-05-29 - Named Scenarios
* Demo SwiftTesting framework
* Generate names for nested scenarios
* Show the names in the graph
* Group or scenario name is required

FI-24-11: 2024-05-28 - Enhanced Dates
* Make Stream's last date be a DateDescription, not an optional Int
* Make start date be a DateSpecifier
* Allow first month to be unspecified for stream
* Add names to generated scenarios

FI-24-10: 2024-05-27 - Income and Expenses
* Remove net() from PlanTree - no longer used
* Color streams based on their flow
* Enter stream as income or expense
* Validate new stream name not empty

FI-24-09: 2024-05-23 - Graphs for Alternatives
* Graph scenarios from the concrete plans
* Fix defect where "group" nodes didn't feed results to children left to right
* Add icons to tree nodes

FI-24-08: 2024-05-22 - Scenarios Class
* Rename ScenarioSet to Scenarios
* Change return values Set<Scenario> to Scenarios
* Encapsulate to Scenarios.scenarios (with new methods on Scenarios)

FI-24-07: 2024-05-21 - Handling Alternatives
* Rename to Possibilities and Scenarios
* Improve test naming
* Turn a plan with alternatives into a set of plans that don't use alternatives
  * Distinguish "and" nodes from "or" nodes
  * Build a concrete plan from a multi-scenario plan with "or" nodes
* Introduce ScenarioSet for Set<Scenario> arguments - might not need a set internally

FI-24-06: 2024-05-20 - Graphs & Combinatorics
* Bug in graph: Make sure net for stream only takes streams that are active that month (fixed PlanLeaf)
* Make Stream able to merge with identically-named streams [but not using it yet]
* Make Stream a struct
* Remove dead code "streams" from MultiScenarioPlan
* Turn a plan with alternatives into a set of plans that don't use alternatives
  * Give nodes a unique id and make tree use that
  * Build a concrete plan from a multi-scenario plan with only "leaf" nodes
  * Build a concrete plan from a multi-scenario plan with only "and" nodes

FI-24-05: 2024-05-16 - Alternative Scenarios
* Made PlanTree be an And-Or tree
* Make plan view able to add tree nodes - groups or scenarios

FI-24-04: 2024-05-15 - Tree Structure
* [Offline] Give each view its own sheet flag
* Tested our enum-based tree and found it didn't propagate info properly
* Spiked a struct version that didn't handle leaf types different from the interior nodes
* Removed the unsuccessful enum interface
* Developed PlanTree, a class-based tree (including backfilled tests)
* Made UI work with PlanTree

FI-24-03: 2024-05-14 - Edit Streams
* Did a spike for display and editing of tree
* Did a parallel change to support a new Plan2 that's an enum (rather than an array of Streams). This sets us up for AND/OR trees of streams (or other things).
* Started a parallel view change to display the plan as a tree

FI-24-02: 2024-05-13 - CRUDdy Streams
Make app able to run on ipad
Reorder streams
Delete stream
Add new stream to a plan
View all info for stream

FI-24-01: 2024-05-09 - Introducing Fiume
[Offline: set up initial project]
Create a plan, able to add streams to it
Add start and stop dates to streams
