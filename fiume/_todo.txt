
Change return values Set<Scenario> to ScenarioSet
Eliminate external access to ScenarioSet.scenarios (with new methods on ScenarioSet)

* Graph scenarios from the concrete plans
* Refine the notion of start or end date to include unspecified, specified [+ year, age, ...]
* Add multiple sections

Should net return an array of values? (since there are alternatives)
Edit stream
Move streams
Delete streams
Move streams between sections - see https://chriswu.com/posts/swiftui/multiplelistmove/
Start/end date editor - just extract for now
Validate new stream name not empty; number is valid; month is valid; end-date >= start-date

Calendar view (with RuleMark)
Add people
Add assets/liabilities
Add flows
Should we segregate streams by income/expense? (two columns)

FI-24-07: 2024-05-21 - Handling Alternatives
* Rename to Possibilities and Scenarios
* Improve test naming
* Turn a plan with alternatives into a set of plans that don't use alternatives
  * Distinguish "and" nodes from "or" nodes
  * Build a concrete plan from a multi-scenario plan with "or" nodes
* Introduce ScenarioSet for Set<Scenario> arguments - might not need a set internally

FI-24-06: 2024-05-20 - Graphs & Combinatorics
* Bug in graph: Make sure net for stream only takes streams that are active that month (fixed PlanLeaf)
* Make Stream able to merge with identically-named streams [but not using it yet]
* Make Stream a struct
* Remove dead code "streams" from MultiScenarioPlan
* Turn a plan with alternatives into a set of plans that don't use alternatives
  * Give nodes a unique id and make tree use that
  * Build a concrete plan from a multi-scenario plan with only "leaf" nodes
  * Build a concrete plan from a multi-scenario plan with only "and" nodes

FI-24-05: 2024-05-16 - Alternative Scenarios
* Made PlanTree be an And-Or tree
* Make plan view able to add tree nodes - groups or scenarios

FI-24-04: 2024-05-15 - Tree Structure
* [Offline] Give each view its own sheet flag
* Tested our enum-based tree and found it didn't propagate info properly
* Spiked a struct version that didn't handle leaf types different from the interior nodes
* Removed the unsuccessful enum interface
* Developed PlanTree, a class-based tree (including backfilled tests)
* Made UI work with PlanTree

FI-24-03: 2024-05-14 - Edit Streams
* Did a spike for display and editing of tree
* Did a parallel change to support a new Plan2 that's an enum (rather than an array of Streams). This sets us up for AND/OR trees of streams (or other things).
* Started a parallel view change to display the plan as a tree

FI-24-02: 2024-05-13 - CRUDdy Streams
Make app able to run on ipad
Reorder streams
Delete stream
Add new stream to a plan
View all info for stream

FI-24-01: 2024-05-09 - Introducing Fiume
[Offline: set up initial project]
Create a plan, able to add streams to it
Add start and stop dates to streams
